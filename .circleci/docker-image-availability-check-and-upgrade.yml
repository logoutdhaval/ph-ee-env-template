version: 2.1
description: "Check for docker image availability wrt jira story and do helm upgrade"
orbs:
  helm: circleci/helm@2.0.1
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3
commands:
  docker-image-availability-check-and-upgrade:
    parameters:
      add-repo:
        description: |
          The url for the helm chart repository used as part of helm repo add
          command
        type: string
      namespace:
        default: ""
        description: |
          The kubernetes namespace that should be used.
        type: string
      chart:
        default: ""
        description: |
          Specify for upgrade a chart reference (e.g. stable/mariadb),
          or a path to a packaged chart (e.g. ./nginx-1.2.3.tgz),
          or a path to an unpacked chart directory (e.g. ./nginx)
          or an absolute URL (e.g. https://example.com/charts/nginx-1.2.3.tgz)
        type: string
      release-name:
        default: ""
        description: |
          Specify a name for the release.
        type: string
      cluster-name:
        default: "sit"
        type: string
      aws-region:
        default: "${REGION}"
        type: string
      service-file-path:
        default: https://raw.githubusercontent.com/openMF/ph-ee-env-labs/c44f269f71762cac2380277757b34d41acb47244/.circleci/services.txt
        type: string

    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: <<parameters.cluster-name>>
          aws-region: <<parameters.aws-region>>
      - helm/install-helm-client:
          version: "v3.8.2"
      - run:
          name: fetch docker images and helm upgrade
          environment:
            ORB_PARAM_CHART: << parameters.chart >>
            ORB_PARAM_NAMESPACE: << parameters.namespace >>
            ORB_PARAM_RELEASE_NAME: << parameters.release-name >>
            ORB_PARAM_REPO: << parameters.add-repo >>
            DOCKER_PATH: docker.io/openmf
            VALUES_TO_OVERRIDE: ''
            SERVICE_FILE_PATH: << parameters.service-file-path>>
          command: |
            if [ "$CIRCLE_BRANCH" != "master" ]; then
              
              
              PR_NUMBER=$(basename $CIRCLE_PULL_REQUEST)
              PR_TITLE=$(curl -sSL "https://api.github.com/repos/openmf/ph-ee-env-template/pulls/$PR_NUMBER" | jq -r '.title')
              JIRA_STORY=$(echo $PR_TITLE | cut -d "[" -f2 | cut -d "]" -f1 | tr '[A-Z]' '[a-z]')
              if [ -z "$JIRA_STORY" ]; then echo "Invalid PR title" && exit 1; else echo "Ticket NO: $JIRA_STORY"; fi
              
              
              function docker_tag_exists() {
                file=$1
                while IFS= read -r line; do
                  echo "Processing line: $line"
                  splitting $line
                done < "$file"
            
              }
              function splitting() {
                echo Splitting: $1
                IFS=' | ' fields=$1
                BASE_PATH=${fields[0]}
                SERVICE_NAME=${fields[1]}
                echo "TESTING TSEING $BASE_PATH $SERVICE_NAME"
                if check_for_image_tag ${SERVICE_NAME} ${JIRA_STORY}; then
                    VALUES_TO_OVERRIDE+=($BASE_PATH=$SERVICE_NAME:$JIRA_STORY),
                fi
              }
              function check_for_image_tag(){
                curl --silent -f --head -lL https://hub.docker.com/v2/repositories/$1/tags/$2/ > /dev/null
              }
            
              wget $SERVICE_FILE_PATH
              filename=$(basename "$SERVICE_FILE_PATH")
              docker_tag_exists $filename
            fi 
              
            
            echo "VALUES_TO_OVERRIDE: $VALUES_TO_OVERRIDE"
            if [ -n "${VALUES_TO_OVERRIDE}" ]; then
                VALUES_TO_OVERRIDE=$(echo --set ${VALUES_TO_OVERRIDE})
            fi

            if [ -n "${ORB_PARAM_NAMESPACE}" ]; then
                ORB_PARAM_NAMESPACE=$(echo --namespace ${ORB_PARAM_NAMESPACE})
            fi
            
            echo helm repo add "${ORB_PARAM_RELEASE_NAME}" "${ORB_PARAM_REPO}"
            helm repo add "${ORB_PARAM_RELEASE_NAME}" "${ORB_PARAM_REPO}"
            
            helm repo update
            echo "helm upgrade --install ${VALUES_TO_OVERRIDE} ${ORB_PARAM_RELEASE_NAME} ${ORB_PARAM_CHART} ${ORB_PARAM_NAMESPACE}"
            helm upgrade --install ${VALUES_TO_OVERRIDE} ${ORB_PARAM_RELEASE_NAME} ${ORB_PARAM_CHART} ${ORB_PARAM_NAMESPACE}
              

  lint:
    parameters:
      jira-story:
        default: latest
        type: string
        description: "Jira story ticket No"

    description: "Install lint dependency"
    steps:
      - checkout
      - run:
          name: "Install  linting tool check + <<parameters.jira-story>>"
          command: echo "Install successful"
      - run:
          name: "Run linting on given dir"
          command: echo "linting successful"
  test:
    description: "Run integration test"
    steps:
      - checkout
      - run:
          name: "Run unit test"
          command: echo "unit test successful"
      - run:
          name: "Run integration test"
          command: echo "integration test successful"

jobs:
  docker-image-availability-check-and-upgrade:
    docker:
      - image: cimg/openjdk:17.0.0
    parameters:
      namespace:
        type: string
        default: ""
      add-repo:
        type: string
      release-name:
        default: ""
        type: string
      chart:
        default: ""
        type: string
      cluster-name:
        default: "sit"
        type: string
      aws-region:
        default: "$REGION"
        type: string
      service-file-path:
        default: https://raw.githubusercontent.com/openMF/ph-ee-env-labs/c44f269f71762cac2380277757b34d41acb47244/.circleci/services.txt
        type: string

    steps:
      - docker-image-availability-check-and-upgrade:
          namespace: <<parameters.namespace>>
          add-repo: <<parameters.add-repo>>
          release-name: <<parameters.release-name>>
          chart: <<parameters.chart>>
          cluster-name: <<parameters.cluster-name>>
          aws-region: <<parameters.aws-region>>

  lint-and-test:
    docker:
      - image: cimg/openjdk:17.0.0
    parameters:
      jira:
        type: string
        default: "55555"
    steps:
      - lint:
          jira-story: <<parameters.jira>>
      - test

